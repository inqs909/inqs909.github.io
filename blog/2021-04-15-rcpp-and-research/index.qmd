---
title: "Rcpp and Research"
date: 2021-04-15
author: "Isaac Quintanilla"
categories: 
  - RCPP
description: "A post describing why I decided to use Rcpp for my research."
summary: "A post describing why I decided to use Rcpp for my research."
draft: false
image: "BL3.jpg"
---

This is the first post of my "Rcpp" collection detailing my journey with Rcpp. The "Rcpp" collection contains information about the struggles I faced while implementing Rcpp. Even though my first venture to Rcpp happened in the Summer of 2020, I realized I am learning new things every day. I thought it would be wised to write a blog of everything I have and will learn with Rcpp. I hope this collection will guide other students who have never used c++ before.

As I am developing my model for my PhD, a major limiting factor is that my model takes a really long time to compute the results I need. Due to the complexity of the model, I need to approximate different components using iterative algorithms. This in turn increases the computation time to obtain results. You can only imagine my frustration when I first coded my model in R and it took more than a week to obtain results!

Therefore, I decided to focus on speeding up my code. I spent time reading Wickham's [Advanced R](https://adv-r.hadley.nz/index.html) Book to speed up my code. There I learned how about vectorizing code, utilizing built-in optimized functions, and common practices for speed gains. All this work has made me a better R programmer. Unfortunately, when I reran my model, the speed gains was not enough to call my efforts a success.

![](https://media.giphy.com/media/Bcpspr9LTSvss/giphy.gif)

Due to the lack of improvements, and knowing I will need expand my model for larger data sets, I set on a quest to improve my model. I attacked this problem on two fronts: looking for mathematical methods to reduce my computation needs and implementing different computing techniques. While both components dramatically improved my computational time, implementing c++ via Rcpp was the biggest game changer for my model.

After I implemented everything I can from Wickham's [Book](https://adv-r.hadley.nz/index.html). I began reading more about about c++ from the book's [c++ chapter](https://adv-r.hadley.nz/rcpp.html). I will be honest, I didn't know what I was doing. This was my first time learning how to use c++. Nevertheless, I was determined to learn more about the c++ due to the potential speed gains. During the summer of 2020, I spent all my time learning about c++ and Rcpp. By the end of my summer, a model that took 3.5 days to converge was now taking approximately 6 hours!

![](https://media.giphy.com/media/xT0GqssRweIhlz209i/giphy.gif)

With this triumph, I have been able to test and diagnose any faults with my model. I can honestly say that implementing Rcpp has drastically improved my PhD experience. I no longer have the feeling of being anxious for days wondering if my model works or not. I feel more productive! With this confidence, I feel prepared to tackle new problems with my research.
