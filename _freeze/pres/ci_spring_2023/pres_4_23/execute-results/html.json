{
  "hash": "9de6af3044b6f24f05c5b1cf51e9112f",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Survival Analysis:\"\nsubtitle: \"The Life and Death of Statistics\"\nauthor: \"Isaac Quintanilla Salinas\"\nformat: \n  revealjs:\n    pointer:\n      pointerSize: 32\n    incremental: false\n    scrollable: true\nknitr:\n  opts_chunk: \n    echo: true\n    eval: true\n    message: false\n    warnings: false\n    comment: \"#>\" \nrevealjs-plugins:\n  - pointer\nfilters: \n  - reveal-auto-agenda\n---\n\n\n\n# Background Information\n\n## Study Example\n\n::: incremental\n-   Acute Myelogenous Leukemia (AML) is a blood and bone marrow cancer that makes abnormal blood cells. This is the most common Leukemia found in adults.\n\n-   There are several factors that affect the prognosis (survival rate) of those with AML.\n\n-   **How do we determine the survival rate of AML patients?**\n:::\n\n## How do determine the survival rate?\n\n::: incremental\n-   Measure from diagnosis to event of interest\n\n-   Construct a probability of surviving up to a certain time point\n:::\n\n## Data Type\n\n::: incremental\n-   Data is typically recorded as time-to-event data.\n\n-   For biomedical studies, researchers are interested in time from diagnosis to death, known as time-to-death.\n:::\n\n# Censoring\n\n## Censoring\n\n::: incremental\n-   Censoring is a mechanism in biomedical studies where we do not observe the true time-to-death.\n\n-   Not all the time is observed.\n\n-   Three common types of censoring mechanisms: *Right, Left,* and *Interval.*\n:::\n\n## Left Censoring\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(ggplot2)\ndat <- data.frame(ID = 1:10, \n                  t1 = c(7, 9, 10, 5, 5, 10, 5, 6, 6, 7) , \n                  censored = c(1, 1, 1, 0, 0, 1, 0, 1, 1, 1))\nggplot(dat, aes(x = ID, y = t1, shape = ifelse(censored, \"Death\", \"Censored\"))) + geom_point(size = 4) + \n    geom_linerange(aes(ymin = 0, ymax = t1)) +\n    geom_hline(yintercept = 5, lty = 2) +\n    coord_flip() + \n    scale_shape_manual(name = \"Event\", values = c(19, 15)) +\n    ggtitle(\"Left Censoring\") + \n    xlab(\"Patient ID\") +  ylab(\"Days\") + \n    theme_bw()\n```\n\n::: {.cell-output-display}\n![](pres_4_23_files/figure-revealjs/unnamed-chunk-1-1.png){width=960}\n:::\n:::\n\n\n\n## Interval Censoring\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(ggplot2)\ndat <- structure(list(ID = 1:5, eventA = c(0L, 1L, 1L, 0L, 1L), \n    eventB = c(1L, 0L, 0L, 1L, 0L), t1 = c(7, 5, 10, 4.5, 2), t2 = c(7, 5, 10, 4.5, \n    8), censored = c(0, 0, 0, 0, 1)), .Names = c(\"ID\", \"eventA\", \n    \"eventB\", \"t1\", \"t2\", \"censored\"), class = \"data.frame\", row.names = c(NA, -5L))\n\ndat$event <- with(dat, ifelse(eventA, \"Censored\", \"Death\"))\n\ndat$id.ordered <- factor(x = dat$ID, levels = order(dat$t2, decreasing = T))\n\nggplot(dat, aes(x = id.ordered)) + \n    geom_linerange(aes(ymin = 0, ymax = t1)) + \n    geom_linerange(aes(ymin = t1, ymax = t2, \n                       linetype = as.factor(censored))) +  \n    geom_point(aes(y = ifelse(censored, \n                              t1 + (t2 - t1) / 2, t2), \n                   shape = event), size = 4) +\n    coord_flip() + \n    scale_linetype_manual(name = \"Censoring\", values = c(1, 2), \n        labels = c(\"Not censored\", \"Interval censored\")) +\n    scale_shape_manual(name = \"Event\", values = c(19, 15)) +\n    ggtitle(\"Interval Censoring\") + \n    xlab(\"Patient ID\") +  ylab(\"Days\") + \n    theme_bw()\n```\n\n::: {.cell-output-display}\n![](pres_4_23_files/figure-revealjs/unnamed-chunk-2-1.png){width=960}\n:::\n:::\n\n\n\n## Right Censoring\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(ggplot2)\ndat <- data.frame(ID = 1:10, \n                  t1 = c(7, 9, 10, 4, 2, 10, 8, 5, 6, 7) , \n                  censored = c(0, 1, 0, 0, 1, 0, 0, 1, 0, 1))\nggplot(dat, aes(x = ID, y = t1, \n                shape = ifelse(censored, \"Death\", \"Censored\"))) +\n    geom_point(size = 4) + \n    geom_linerange(aes(ymin = 0, ymax = t1)) +\n    geom_hline(yintercept = 10, lty = 2) +\n    coord_flip() + \n    scale_shape_manual(name = \"Event\", values = c(19, 15)) +\n    ggtitle(\"Right Censoring\") + \n    xlab(\"Patient ID\") +  ylab(\"Days\") + \n    theme_bw()\n```\n\n::: {.cell-output-display}\n![](pres_4_23_files/figure-revealjs/unnamed-chunk-3-1.png){width=960}\n:::\n:::\n\n\n\n## Censoring\n\n::: incremental\n-   Censoring affects the time-to-death information\n\n-   However, we obtain some information when data is censored\n\n-   Incorporate methods to utilize partial information\n\n-   Censoring is independent of time-to-death generation\n\n-   Right Censoring\n:::\n\n## Data Construction\n\n::: incremental\n-   $T_i^*$: True time-to-event\n\n-   $C_i$: Censoring Time\n\n-   $T_i=\\min(T_i^*,C_i)$: Observed time-to-event\n\n-   $\\delta_i = I(T_i^*<C_i)$: Event indicator\n:::\n\n# Survival Analysis Functions\n\n## Survivial Analysis Functions\n\nDescribe the Probability Model\n\n-   Hazard Function\n-   Survival Function\n-   Cumulative Hazard Function\n\n## Hazard Function\n\n$$\nh(t) = \\lim_{\\Delta t \\rightarrow 0} \\frac{P(t \\le T^* < t + \\Delta t \\mid T^* \\ge t)}{\\Delta t}\n$$\n\n## Survival Function\n\n$$\nS(t) = P(T^* > t)\n$$\n\n## Cumulative Hazard Function\n\n$$\nH(t) = \\int_0^t h(u) du\n$$\n\n## Survival and Hazard Function Relationship\n\n$$\nS(t) = e^{-H(t)}\n$$\n\n## Probability Density Function\n\n$$\nf(t) = h(t)S(t)\n$$\n\n# Survival Rate\n\n## Survival Curve\n\n::: incremental\n-   The survival curve will determine what is the probability of suriving up to a certain time.\n\n-   A survival curve uses both censored and uncensored data\n\n-   A survival curve can be used to determine the median survival time of a disease\n:::\n\n## Data\n\nLet $\\{t_j,d_j,R_j\\}^D_{j=1}$ denote the survival data, where $t_1<t_2<\\cdots<t_D$ are the ordered distinct observed event times, $d_j$ represents the number of events at time point $t_j$, and $R_j$ denotes the number of subjects still at risk of experiencing the event at $t_j$.\n\n## Kaplan-Meier Estimator\n\n$$\n\\hat{S}(t) =\\left\\{\\begin{array}{cc} \n1 & t=0 \\\\\n\\prod_{i:t_j \\le t} \\left( 1 - \\frac{d_j}{R_j} \\right) & t_j < t\n\\end{array}\\right.\n$$\n\n## Standard Error\n\n$$\n\\widehat{SE}\\{\\hat S(t)\\}=\\sqrt{\\hat S^2(t)\\sum_{t_j\\leq t}\\frac{d_j}{R_j(R_j-d_j)}}.\n$$\n\n## Survival Curve\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(survival)\nlibrary(ggsurvfit)\nlibrary(magrittr)\naml %$% survfit2(Surv(time, status) ~ 1)  %>% \n      ggsurvfit(linewidth = 1) +\n      add_quantile(y_value = 0.5, color = \"gray50\", linewidth = 0.75)\n```\n\n::: {.cell-output-display}\n![](pres_4_23_files/figure-revealjs/unnamed-chunk-4-1.png){width=960}\n:::\n:::\n\n\n\n# Cox Proportional Hazard Model\n\n## Data\n\nLet $\\{T_i,\\delta_i,\\boldsymbol X_i\\}^n_{i=1}$ denote the survival data, where $T_i$ is observed event times, $\\delta_i$ is the survival indicator, and $\\boldsymbol X_i$ denotes the a vector of predictor variables.\n\n## Proportional Hazard Model\n\n$$\nh(t \\mid \\boldsymbol X) = h_0(t) \\exp(\\boldsymbol\\beta^\\mathrm T\\boldsymbol X)\n$$\n\n-   $h_0(t)$: baseline hazard function\n\n-   $\\boldsymbol\\beta$: regression coefficients\n\n-   $\\boldsymbol X$: predictor variables\n\n## How do we estimate parameters $\\boldsymbol \\beta$\n\nWe use a maximum likelihood approach where we search for the values of $\\boldsymbol \\beta$ the maximizes the likelihood function.\n\nThe Likelihood function measures the probability of observing the data given the parameters $\\boldsymbol \\beta$.\n\n## Construction of the Likelihood Function\n\nDue to right censoring, likelihood needs careful construction\n\n::: columns\n::: {.column width=\"50%\"}\n#### Death is observed\n\n$$\nf(t|\\boldsymbol X,\\boldsymbol \\beta) = h(t)S(t)\n$$\n:::\n\n::: {.column width=\"50%\"}\n#### Censored\n\n$$\nS(t)\n$$\n:::\n:::\n\n## Likelihood Function\n\n$$\nL(\\boldsymbol \\beta) = \\prod_{i=1}^n [h(T_i \\mid \\boldsymbol X_i, \\boldsymbol\\beta)]^{\\delta_i} [S(T_i \\mid \\boldsymbol X_i, \\boldsymbol \\beta)]\n$$\n\n## Likelihood Function\n\n$$\nL(\\boldsymbol \\beta) = \\prod_{i=1}^n \\{h_0(t) \\exp(\\boldsymbol\\beta^\\mathrm T\\boldsymbol x_i)\\}^{\\delta_i} \\exp\\left\\{-\\int^{T_i}_0 h_0(s) \\exp(\\boldsymbol\\beta^\\mathrm T\\boldsymbol x_i)ds\\right\\}\n$$\n\n## Estimating the Baseline Hazard Function\n\n$$\nh_0(t)\n$$\n\n::: fragment\n::: columns\n::: {.column width=\"50%\"}\n### Parameterically\n\n-   Weibull\n\n-   log-Normal\n\n-   Gompetz\n:::\n\n::: {.column width=\"50%\"}\n### Nonparametrically\n\n-   Profile MLE\n\n-   Spline Models\n:::\n:::\n:::\n\n## Partial Likelihood\n\n$$\nL_P(\\boldsymbol\\beta) = \\prod_{i=1}^D \\frac{\\exp(\\boldsymbol\\beta^T \\boldsymbol X_i)}{\\sum_{j \\in R(t_i)} \\exp(\\boldsymbol\\beta^T \\boldsymbol X_j)}\n$$\n\n-   $R(t_i)$: the patients at risk prior to time $t_i$\n-   $D$: Number of individuals experiencing the event\n\n## Estimation\n\nThe estimates of $\\boldsymbol \\beta$ can be obtained finding the Maximum Partial Likelihood Estimate (MPLE)\n\n## Sampling Distribution\n\n$$\n\\hat{\\boldsymbol \\beta} \\overset{\\circ}{\\sim} N\\left\\{\\boldsymbol \\beta, - I^{-1}(\\boldsymbol \\beta)\\right\\} \n$$\n\n# Example\n\n## Colon Example\n\n-   Colon cancer is a type of cancer found in the large intestine\n-   We will be looking whether different treatment types will have an affect on the survival rate\n\n## Colon Survival Curve\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(survival)\nlibrary(ggsurvfit)\nlibrary(magrittr)\nlibrary(tidyverse)\ndf_colon %$% survfit2(Surv(time, status) ~ 1)  %>% \n      ggsurvfit(linewidth = 1) +\n      add_quantile(y_value = 0.5, color = \"gray50\", linewidth = 0.75)\n```\n\n::: {.cell-output-display}\n![](pres_4_23_files/figure-revealjs/unnamed-chunk-5-1.png){width=960}\n:::\n:::\n\n\n\n## Colon Survival Curve\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf_colon %$% survfit2(Surv(time, status) ~ rx)  %>% \n      ggsurvfit(linewidth = 1) +\n      add_quantile(y_value = 0.5, color = \"gray50\", linewidth = 0.75)\n```\n\n::: {.cell-output-display}\n![](pres_4_23_files/figure-revealjs/unnamed-chunk-6-1.png){width=960}\n:::\n:::\n\n\n\n## Colon Survival Curve\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf_colon %$% survfit2(Surv(time, status) ~ rx)  %>% \n      ggsurvfit(linewidth = 1) +\n      add_confidence_interval() +\n      add_quantile(y_value = 0.5, color = \"gray50\", linewidth = 0.75)\n```\n\n::: {.cell-output-display}\n![](pres_4_23_files/figure-revealjs/unnamed-chunk-7-1.png){width=960}\n:::\n:::\n\n\n\n## Cox PH Model\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf_colon %$% coxph(Surv(time, status) ~ rx) %>% \n  broom::tidy(exponentiate = T) %>% \n  mutate_if(is.numeric,\n            round,\n            digits = 2) %>% \n  DT::datatable(options = list(dom = 't')) \n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"datatables html-widget html-fill-item\" id=\"htmlwidget-d7cf1bffab933e804f74\" style=\"width:100%;height:auto;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-d7cf1bffab933e804f74\">{\"x\":{\"filter\":\"none\",\"vertical\":false,\"data\":[[\"1\",\"2\"],[\"rxLevamisole\",\"rxLevamisole+5-FU\"],[0.98,0.6],[0.11,0.12],[-0.14,-4.32],[0.89,0]],\"container\":\"<table class=\\\"display\\\">\\n  <thead>\\n    <tr>\\n      <th> <\\/th>\\n      <th>term<\\/th>\\n      <th>estimate<\\/th>\\n      <th>std.error<\\/th>\\n      <th>statistic<\\/th>\\n      <th>p.value<\\/th>\\n    <\\/tr>\\n  <\\/thead>\\n<\\/table>\",\"options\":{\"dom\":\"t\",\"columnDefs\":[{\"className\":\"dt-right\",\"targets\":[2,3,4,5]},{\"orderable\":false,\"targets\":0},{\"name\":\" \",\"targets\":0},{\"name\":\"term\",\"targets\":1},{\"name\":\"estimate\",\"targets\":2},{\"name\":\"std.error\",\"targets\":3},{\"name\":\"statistic\",\"targets\":4},{\"name\":\"p.value\",\"targets\":5}],\"order\":[],\"autoWidth\":false,\"orderClasses\":false}},\"evals\":[],\"jsHooks\":[]}</script>\n```\n\n:::\n:::\n\n\n\n# R Code\n\n## Fitting a Survival Curve\n\n::: panel-tabset\n## Code\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(magrittr) #<1>\nlibrary(survival) #<2>\nlibrary(ggsurvfit) #<3>\ndf_colon %$% survfit(Surv(time, status) ~ surg)  %>% #<4> \n      ggsurvfit(linewidth = 1) + #<5>\n      add_confidence_interval() + #<6>\n      add_quantile(y_value = 0.5, color = \"gray50\", linewidth = 0.75) #<7>\n```\n:::\n\n\n\n1.  Pipe package\n2.  Survival functions package\n3.  Plots survival curves package\n4.  Applies the Kaplan-Meier Function\n5.  Plots Survival Curve\n6.  Adds Confidence Intervals\n7.  Determines Median Survival Time\n\n## Output\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf_colon %$% survfit(Surv(time, status) ~ surg)  %>% \n      ggsurvfit(linewidth = 1) + \n      add_confidence_interval() +\n      add_quantile(y_value = 0.5, color = \"gray50\", linewidth = 0.75)\n```\n\n::: {.cell-output-display}\n![](pres_4_23_files/figure-revealjs/unnamed-chunk-10-1.png){width=960}\n:::\n:::\n\n\n:::\n\n## Fitting Cox PH Model\n\n::: panel-tabset\n## Code\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf_colon %$% coxph(Surv(time, status) ~ surg)  %>%\n  summary\n```\n:::\n\n\n\n## Output\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf_colon %$% coxph(Surv(time, status) ~ surg)  %>%\n  summary\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n#> Call:\n#> coxph(formula = Surv(time, status) ~ surg)\n#> \n#>   n= 929, number of events= 468 \n#> \n#>                                   coef exp(coef) se(coef)     z Pr(>|z|)  \n#> surgExtended Time Since Surgery 0.2549    1.2903   0.1008 2.529   0.0114 *\n#> ---\n#> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n#> \n#>                                 exp(coef) exp(-coef) lower .95 upper .95\n#> surgExtended Time Since Surgery      1.29      0.775     1.059     1.572\n#> \n#> Concordance= 0.523  (se = 0.01 )\n#> Likelihood ratio test= 6.17  on 1 df,   p=0.01\n#> Wald test            = 6.39  on 1 df,   p=0.01\n#> Score (logrank) test = 6.43  on 1 df,   p=0.01\n```\n\n\n:::\n:::\n\n\n:::\n",
    "supporting": [
      "pres_4_23_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"../../site_libs/htmltools-fill-0.5.8.1/fill.css\" rel=\"stylesheet\" />\n<script src=\"../../site_libs/htmlwidgets-1.6.4/htmlwidgets.js\"></script>\n<link href=\"../../site_libs/datatables-css-0.0.0/datatables-crosstalk.css\" rel=\"stylesheet\" />\n<script src=\"../../site_libs/datatables-binding-0.33/datatables.js\"></script>\n<script src=\"../../site_libs/jquery-3.6.0/jquery-3.6.0.min.js\"></script>\n<link href=\"../../site_libs/dt-core-1.13.6/css/jquery.dataTables.min.css\" rel=\"stylesheet\" />\n<link href=\"../../site_libs/dt-core-1.13.6/css/jquery.dataTables.extra.css\" rel=\"stylesheet\" />\n<script src=\"../../site_libs/dt-core-1.13.6/js/jquery.dataTables.min.js\"></script>\n<link href=\"../../site_libs/crosstalk-1.2.1/css/crosstalk.min.css\" rel=\"stylesheet\" />\n<script src=\"../../site_libs/crosstalk-1.2.1/js/crosstalk.min.js\"></script>\n"
      ],
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}